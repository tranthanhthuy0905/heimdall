# Routes
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Basic is it up endpoint
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GET  /media/alive                           controllers.HealthController.isItUp


# Heimdall API
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GET  /media/image/transcode                 controllers.ImageController.view
GET  /media/image/thumbnail                 controllers.ImageController.extractThumbnail
GET  /media/image/zoom                      controllers.ImageController.zoom
GET  /media/image/metadata                  controllers.ImageController.metadata

POST /media/video/convert                   controllers.MediaConvertController.convert
GET  /media/video/status                    controllers.MediaConvertController.status

GET  /media/document/view                   controllers.DocumentController.view

POST /media/xpreport/info                   controllers.XpReportController.logInfo
POST /media/xpreport/stalled                controllers.XpReportController.logStalled


# Routing for RTMv1
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GET  /media/streamed                        controllers.AuditController.recordMediaStreamedEvent
GET  /media/start                           controllers.v1.ProbeController.probe

GET  /media/hls/master                      controllers.v1.HlsController.playlist
GET  /media/hls/variant                     controllers.v1.HlsController.playlist
GET  /media/hls/segment                     controllers.v1.HlsController.segment
GET  /media/hls/longsegment                 controllers.v1.HlsController.segment

GET  /media/thumbnail                       controllers.v1.ThumbnailController.thumbnail
GET  /media/downloadthumbnail               controllers.v1.ThumbnailDownloadController.downloadThumbnail

GET  /media/audio/sample                    controllers.v1.AudioController.sample
GET  /media/audio/mp3                       controllers.v1.AudioController.mp3

# Routing for RTMv2
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GET  /v2/media/streamed                     controllers.AuditController.recordMediaStreamedEvent
GET  /v2/media/start                        controllers.v2.ProbeController.probe

GET  /v2/media/hls/master                   controllers.v2.HlsController.playlist
GET  /v2/media/hls/variant                  controllers.v2.HlsController.playlist
GET  /v2/media/hls/segment                  controllers.v2.HlsController.segment
GET  /v2/media/hls/longsegment              controllers.v2.HlsController.segment

GET  /v2/media/thumbnail                    controllers.v2.ThumbnailController.thumbnail
GET  /v2/media/downloadthumbnail            controllers.v2.ThumbnailDownloadController.downloadThumbnail

GET  /v2/media/audio/sample                 controllers.v2.AudioController.sample
GET  /v2/media/audio/mp3                    controllers.v2.AudioController.mp3

# Routing for DRD (Document Redaction) service
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
POST   /api/v1/redaction/document/evidences/:evidenceId/redactions                            controllers.RedactionController.createDocumentRedaction(evidenceId: String)

GET    /api/v1/redaction/document/evidences/:evidenceId/redactions                            controllers.RedactionController.getDocumentRedactions(evidenceId: String)
DELETE /api/v1/redaction/document/evidences/:evidenceId/redactions/:redactionId               controllers.RedactionController.deleteDocumentRedaction(evidenceId: String, redactionId: String)
# xfdf apis
GET    /api/v1/redaction/document/evidences/:evidenceId/redactions/:redactionId/xfdf          controllers.RedactionController.getXfdf(evidenceId: String, redactionId: String)
POST   /api/v1/redaction/document/evidences/:evidenceId/redactions/:redactionId/xfdf_commands controllers.RedactionController.postXfdfCommands(evidenceId: String, redactionId: String)

# APIs for evidence playback settings
GET    /media/settings/agencies/:agencyId/evidencePlaybackSettings/watermark     controllers.PartnerController.getWatermarkSettings(agencyId)
POST   /media/settings/agencies/:agencyId/evidencePlaybackSettings/watermark     controllers.PartnerController.updateWatermarkSettings(agencyId)

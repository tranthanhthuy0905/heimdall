# Routes
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Basic is it up endpoint
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GET  /media/alive                           controllers.HealthController.isItUp


# Heimdall API
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GET  /media/image/transcode                 controllers.ImageController.view
GET  /media/image/thumbnail                 controllers.ImageController.extractThumbnail
GET  /media/image/zoom                      controllers.ImageController.zoom
GET  /media/image/metadata                  controllers.ImageController.metadata

POST /media/video/convert                   controllers.MediaConvertController.convert
GET  /media/video/status                    controllers.MediaConvertController.status

GET  /media/document/view                   controllers.DocumentController.view

POST /media/xpreport/info                   controllers.XpReportController.logInfo
POST /media/xpreport/stalled                controllers.XpReportController.logStalled

# Routing for Concatenation
POST /media/video/concatenate               controllers.ConcatenationController.requestConcat


# Routing for RTM
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GET  /media/streamed                        controllers.AuditController.recordMediaStreamedEvent
GET  /media/start                           controllers.ProbeController.probe
GET  /meida/group/start                     controllers.ProbeController.probeAll

GET  /media/hls/master                      controllers.HlsController.master
GET  /media/hls/variant                     controllers.HlsController.playlist
GET  /media/hls/segment                     controllers.HlsController.segment
GET  /media/hls/longsegment                 controllers.HlsController.segment

GET  /media/thumbnail                       controllers.ThumbnailController.thumbnail
GET  /media/downloadthumbnail               controllers.ThumbnailDownloadController.downloadThumbnail

GET  /media/audio/sample                    controllers.AudioController.sample
GET  /media/audio/mp3                       controllers.AudioController.mp3


# For Debugging purpose

GET /debug/hls/master                       controllers.HlsDebugController.master


# Routing for DRD (Document Redaction) service
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
POST   /api/v1/redaction/document/evidences/:evidenceId/redactions                            controllers.RedactionController.createDocumentRedaction(evidenceId: String)

GET    /api/v1/redaction/document/evidences/:evidenceId/redactions                            controllers.RedactionController.getDocumentRedactions(evidenceId: String)
GET    /api/v1/redaction/document/evidences/:evidenceId/redactions/:redactionId               controllers.RedactionController.getRedactionData(evidenceId: String, redactionId: String)
DELETE /api/v1/redaction/document/evidences/:evidenceId/redactions/:redactionId               controllers.RedactionController.deleteDocumentRedaction(evidenceId: String, redactionId: String)
POST   /api/v1/redaction/document/evidences/:evidenceId/redactions/:redactionId/extractions   controllers.RedactionController.createExtraction(evidenceId: String, redactionId: String)
# xfdf apis
GET    /api/v1/redaction/document/evidences/:evidenceId/redactions/:redactionId/xfdf          controllers.RedactionController.getXfdf(evidenceId: String, redactionId: String)
POST   /api/v1/redaction/document/evidences/:evidenceId/redactions/:redactionId/xfdf_commands controllers.RedactionController.postXfdfCommands(evidenceId: String, redactionId: String)

# APIs for evidence playback settings
GET    /media/settings/agencies/:agencyId/evidencePlaybackSettings/watermark     controllers.PartnerController.getWatermarkSettings(agencyId)
POST   /media/settings/agencies/:agencyId/evidencePlaybackSettings/watermark     controllers.PartnerController.updateWatermarkSettings(agencyId)
